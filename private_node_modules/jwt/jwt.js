
const crypto = require('crypto');
const base64url = require('base64url');

module.exports.generate_jwt = function (header, payload, secret) {

	let data = base64url.encode(Buffer.from(JSON.stringify(header))) + "." + base64url.encode(Buffer.from(JSON.stringify(payload)));

	let signature = base64url.fromBase64(crypto.createHmac("sha256", secret).update(data).digest('base64'));

	let token = data + "." + signature;

	return token;

}

module.exports.verify_signature = function (token, secret) {

	// First check if token is of form a.b.c
	let parts = token.split('.');

	if (parts.length!=3) {
		return false;
	}

	let signature = parts[2];
	let data = parts[0] + "." + parts[1];
	let true_signature = base64url.fromBase64(crypto.createHmac("sha256", secret).update(data).digest('base64'));

	let valid =  signature==true_signature;

	return valid;

}

module.exports.extract_data_from_jwt = function (token) {

	// First check if token is of form a.b.c
	let parts = token.split('.');

	if (parts.length!=3) {
		return null;
	}

	let header = JSON.parse(base64url.decode(parts[0]));
	let payload = JSON.parse(base64url.decode(parts[1]));



	data = {};
	data['header'] = header;
	data['payload'] = payload;
	
	return data;

}


